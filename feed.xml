<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://adeeconometrics.github.io//</id><title>Dave Amiana</title><subtitle>Compuer Science, Programming, Software Development</subtitle> <updated>2024-12-14T12:51:19+08:00</updated> <author> <name>Dave Amiana</name> <uri>https://adeeconometrics.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://adeeconometrics.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://adeeconometrics.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator> <rights> © 2024 Dave Amiana </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Stable Diffusion From First Principles</title><link href="https://adeeconometrics.github.io//posts/Stable-Diffusion-From-First-Principles/" rel="alternate" type="text/html" title="Stable Diffusion From First Principles" /><published>2022-10-22T00:00:00+08:00</published> <updated>2022-10-22T00:00:00+08:00</updated> <id>https://adeeconometrics.github.io//posts/Stable-Diffusion-From-First-Principles/</id> <content src="https://adeeconometrics.github.io//posts/Stable-Diffusion-From-First-Principles/" /> <author> <name>Dave Amiana</name> </author> <category term="Programming" /> <category term="Computer Science" /> <category term="Diffusion Model" /> <category term="AI" /> <summary> An Overview of Generative Modeling Framework Generative models have been successfully used for computer vision tasks such as image super-resolution (Saharia et. al., 2021), text-to-image synthesis (Mirza &amp;amp; Osindero, 2014), and 3D scene rendering (Poole, Jain, Barron, &amp;amp; Mildenhall, 2022). The goal of generative models is to train a probabilistic model that approximates the probability d... </summary> </entry> <entry><title>Design Principles of Data Structures Library</title><link href="https://adeeconometrics.github.io//posts/Design-Principles-Of-Data-Structures-Library/" rel="alternate" type="text/html" title="Design Principles of Data Structures Library" /><published>2021-09-01T00:00:00+08:00</published> <updated>2022-10-22T22:11:50+08:00</updated> <id>https://adeeconometrics.github.io//posts/Design-Principles-Of-Data-Structures-Library/</id> <content src="https://adeeconometrics.github.io//posts/Design-Principles-Of-Data-Structures-Library/" /> <author> <name>Dave Amiana</name> </author> <category term="Programming" /> <category term="Computer Science" /> <category term="C++" /> <category term="Data Structures" /> <category term="Algorithms" /> <summary> This article will cover the guiding principle for the design and implementation of our data structures library. Since we form our discussion around C++, most ideas we will talk about came from the design principles of Standard Template Library (STL). Modern libraries have been inspired by the main ideas in STL which was introduced by Alexander Stepanov; It is worth looking at the fundamental no... </summary> </entry> <entry><title>Understanding Abstract Data Types</title><link href="https://adeeconometrics.github.io//posts/Understanding-Abstract-Data-Types/" rel="alternate" type="text/html" title="Understanding Abstract Data Types" /><published>2021-08-31T00:00:00+08:00</published> <updated>2022-10-22T22:11:50+08:00</updated> <id>https://adeeconometrics.github.io//posts/Understanding-Abstract-Data-Types/</id> <content src="https://adeeconometrics.github.io//posts/Understanding-Abstract-Data-Types/" /> <author> <name>Dave Amiana</name> </author> <category term="Programming" /> <category term="Computer Science" /> <category term="C++" /> <category term="Data Structures" /> <category term="Algorithms" /> <summary> This article introduces what we mean by Abstract Data Types (ADT) and its importance in developing our Data Structures Library. Abstraction is of the essence of a scalable software system. In designing systems, we want to work with higher orders of abstraction in the same way we think about concepts. Navigating ourselves in the space of concepts allows us to see the bigger picture and prevents ... </summary> </entry> <entry><title>Iterators: The link between Data Structures and Algorithms</title><link href="https://adeeconometrics.github.io//posts/Iterators/" rel="alternate" type="text/html" title="Iterators: The link between Data Structures and Algorithms" /><published>2021-08-28T00:00:00+08:00</published> <updated>2022-10-22T22:11:50+08:00</updated> <id>https://adeeconometrics.github.io//posts/Iterators/</id> <content src="https://adeeconometrics.github.io//posts/Iterators/" /> <author> <name>Dave Amiana</name> </author> <category term="Programming" /> <category term="Computer Science" /> <category term="C++" /> <category term="Data Structures" /> <category term="Algorithms" /> <summary> This article will introduce the need for implementing iterators in writing a maintainable and flexible data structure. Before we start the series and actually implement data structures, it is important to motivate our high-level design goals. That said, we want to be able to interface our data structure consistently. The benefit we gain from this is to be able to abstract shared interfaces amo... </summary> </entry> <entry><title>Preface: Data Structures</title><link href="https://adeeconometrics.github.io//posts/Preface-DataStructures/" rel="alternate" type="text/html" title="Preface: Data Structures" /><published>2021-08-27T00:00:00+08:00</published> <updated>2022-10-22T22:11:50+08:00</updated> <id>https://adeeconometrics.github.io//posts/Preface-DataStructures/</id> <content src="https://adeeconometrics.github.io//posts/Preface-DataStructures/" /> <author> <name>Dave Amiana</name> </author> <category term="Programming" /> <category term="Computer Science" /> <category term="C++" /> <category term="Data Structures" /> <category term="Algorithms" /> <summary> Introduction: Mostly about my Experience I took this course during my sophomore year in Computer Science. I am in my Junior year and I’m currently hacking on languages which I plan to build a series on the design space of compilers someday (fingers crossed). Building a software system like compilers requires you to know a lot about Algorithms and Data Structures, just like anything we encounte... </summary> </entry> </feed>
